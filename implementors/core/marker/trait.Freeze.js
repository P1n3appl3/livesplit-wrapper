(function() {var implementors = {
"bytemuck":[["impl Freeze for <a class=\"enum\" href=\"bytemuck/checked/enum.CheckedCastError.html\" title=\"enum bytemuck::checked::CheckedCastError\">CheckedCastError</a>",1,["bytemuck::checked::CheckedCastError"]],["impl Freeze for <a class=\"enum\" href=\"bytemuck/enum.PodCastError.html\" title=\"enum bytemuck::PodCastError\">PodCastError</a>",1,["bytemuck::PodCastError"]]],
"livesplit_wrapper":[["impl Freeze for <a class=\"enum\" href=\"livesplit_wrapper/enum.Error.html\" title=\"enum livesplit_wrapper::Error\">Error</a>",1,["livesplit_wrapper::process::Error"]],["impl Freeze for <a class=\"struct\" href=\"livesplit_wrapper/struct.Process.html\" title=\"struct livesplit_wrapper::Process\">Process</a>",1,["livesplit_wrapper::process::Process"]],["impl Freeze for <a class=\"struct\" href=\"livesplit_wrapper/struct.Logger.html\" title=\"struct livesplit_wrapper::Logger\">Logger</a>",1,["livesplit_wrapper::Logger"]],["impl Freeze for <a class=\"enum\" href=\"livesplit_wrapper/enum.TimerState.html\" title=\"enum livesplit_wrapper::TimerState\">TimerState</a>",1,["livesplit_wrapper::TimerState"]]],
"log":[["impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>",1,["log::Level"]],["impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>",1,["log::LevelFilter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;",1,["log::Record"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;",1,["log::RecordBuilder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;",1,["log::Metadata"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;",1,["log::MetadataBuilder"]],["impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>",1,["log::SetLoggerError"]],["impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>",1,["log::ParseLevelError"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()